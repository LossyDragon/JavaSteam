import in.dragonbra.steamlanguagegen.SteamLanguageGenPlugin

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    }
}

group 'in.dragonbra'
version '1.1.0'

allprojects {
    group 'in.dragonbra'
    version '1.1.0'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'jacoco'
apply plugin: SteamLanguageGenPlugin

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.protobuf:protobuf-java:3.20.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
    testImplementation 'commons-codec:commons-codec:1.15'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.18.0'
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

sourceSets {
    main {
        java {
            srcDirs += new File(buildDir, 'generated/source/steamd/main/java')
            srcDirs += new File(buildDir, 'generated/source/proto/main/java')
            srcDirs += new File(buildDir, 'generated/source/in/dragonbra/javasteam')
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task generatVersionClass {
    def outputDir = file("$buildDir/generated/source/in/dragonbra/javasteam/util")
    outputs.dir outputDir
    doFirst {
        outputDir.exists() || outputDir.mkdirs()
        new File(outputDir, "Versions.java")
                .write("""package in.dragonbra.javasteam.util;

public class Versions { 
    public static final String VERSION = \"$project.version\"; 
}""")
    }
}

compileJava.dependsOn generatVersionClass
compileJava.dependsOn generateSteamLanguage
check.dependsOn jacocoTestReport

javadoc {
    exclude "**/in/dragonbra/javasteam/protobufs/**"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

// TODO fix
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//            pom.project {
//                name 'JavaSteam'
//                packaging 'jar'
//                description 'Java library to interact with Valve\'s Steam network.'
//                url 'https://github.com/Longi94/JavaSteam'
//                inceptionYear '2018'
//
//                scm {
//                    connection 'scm:git:git://github.com/Longi94/JavaSteam.git'
//                    developerConnection 'scm:git:ssh://github.com:Longi94/JavaSteam.git'
//                    url 'http://github.com/Longi94/JavaSteam/tree/master'
//                }
//
//                licenses {
//                    license {
//                        name 'MIT License'
//                        url 'http://www.opensource.org/licenses/mit-license.php'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'Longi'
//                        name 'Long Tran'
//                        email 'lngtrn94@gmail.com'
//                    }
//                }
//            }
//        }
//    }
//}
